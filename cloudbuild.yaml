substitutions:
  _REGISTRY: us.gcr.io
  _IMAGE: cromwell-task-monitor-bq
  _REGION: us-east1
  _DATASET_ID: cromwell_monitoring
  _CROMWELL_BASEURL: '' # e.g. https://cromwell.example.org
  _CROMWELL_LOGS_BUCKET: '' # e.g. final-workflow-logs
  _CROMWELL_SERVICE_ACCOUNT: 'cromwell-metadata-uploader'

steps:
- name: gcr.io/cloud-builders/docker
  entrypoint: bash
  dir: monitor
  env:
  - IMAGE=${_REGISTRY}/${PROJECT_ID}/${_IMAGE}
  args: [
    '-c', '
      docker build -t $${IMAGE} --build-arg DATASET_ID=${_DATASET_ID} .
      &&
      docker push $${IMAGE}'
  ]

- name: gcr.io/cloud-builders/gcloud
  entrypoint: bash
  dir: metadata
  env:
  - FUNCTION=cromwell-metadata-upload
  - SA_EMAIL=${_CROMWELL_SERVICE_ACCOUNT}@${PROJECT_ID}.iam.gserviceaccount.com
  args: [
    '-c', |
      set -e

      gcloud iam service-accounts create ${_CROMWELL_SERVICE_ACCOUNT}
        --display-name "Client for Cromwell Metadata Uploader Cloud Function" || true

      bq mk -f --dataset ${_DATASET_ID}
      bq show --format json ${_DATASET_ID} |
        jq -r '.access |= (.+ [{
          role: "WRITER",
          userByEmail: "$${SA_EMAIL}"
        }] | unique)'
        > dataset.json
      bq update --source dataset.json ${_DATASET_ID}

      gcloud functions deploy $${FUNCTION}
        --runtime go111
        --region ${_REGION}
        --trigger-bucket ${_CROMWELL_LOGS_BUCKET}
        --service-account $${SA_EMAIL}
        --set-env-vars DATASET_ID=${_DATASET_ID},CROMWELL_BASEURL=${_CROMWELL_BASEURL}
        --memory 128MB
  ]
